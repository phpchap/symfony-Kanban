<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Department', 'doctrine');

/**
 * BaseDepartment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property text $description
 * @property string $short_name
 * @property string $task_color
 * @property Doctrine_Collection $Tasks
 * @property Doctrine_Collection $Departments
 * @property Doctrine_Collection $TaskDepartments
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method text                getDescription()     Returns the current record's "description" value
 * @method string              getShortName()       Returns the current record's "short_name" value
 * @method string              getTaskColor()       Returns the current record's "task_color" value
 * @method Doctrine_Collection getTasks()           Returns the current record's "Tasks" collection
 * @method Doctrine_Collection getDepartments()     Returns the current record's "Departments" collection
 * @method Doctrine_Collection getTaskDepartments() Returns the current record's "TaskDepartments" collection
 * @method Department          setId()              Sets the current record's "id" value
 * @method Department          setName()            Sets the current record's "name" value
 * @method Department          setDescription()     Sets the current record's "description" value
 * @method Department          setShortName()       Sets the current record's "short_name" value
 * @method Department          setTaskColor()       Sets the current record's "task_color" value
 * @method Department          setTasks()           Sets the current record's "Tasks" collection
 * @method Department          setDepartments()     Sets the current record's "Departments" collection
 * @method Department          setTaskDepartments() Sets the current record's "TaskDepartments" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDepartment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('department');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('short_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('task_color', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Task as Tasks', array(
             'refClass' => 'TaskDepartment',
             'local' => 'department_id',
             'foreign' => 'task_id'));

        $this->hasMany('Task as Departments', array(
             'local' => 'id',
             'foreign' => 'department_id'));

        $this->hasMany('TaskDepartment as TaskDepartments', array(
             'local' => 'id',
             'foreign' => 'department_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}